{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOCRL5mupJbvCA9ji97eZE4"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Instalacja potrzebnuch bibliotek języka Python"],"metadata":{"id":"y1d2zNt5t2PE"}},{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jH_A2ZNOoFTW","executionInfo":{"status":"ok","timestamp":1704760939912,"user_tz":-60,"elapsed":14687,"user":{"displayName":"Marcin Zagrodzki","userId":"16643678327861906315"}},"outputId":"98596ca5-93f5-4eac-c10b-006c5a564a9d"},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: torch_geometric in /usr/local/lib/python3.10/dist-packages (2.4.0)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from torch_geometric) (4.66.1)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from torch_geometric) (1.23.5)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.10/dist-packages (from torch_geometric) (1.11.4)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from torch_geometric) (3.1.2)\n","Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from torch_geometric) (2.31.0)\n","Requirement already satisfied: pyparsing in /usr/local/lib/python3.10/dist-packages (from torch_geometric) (3.1.1)\n","Requirement already satisfied: scikit-learn in /usr/local/lib/python3.10/dist-packages (from torch_geometric) (1.2.2)\n","Requirement already satisfied: psutil>=5.8.0 in /usr/local/lib/python3.10/dist-packages (from torch_geometric) (5.9.5)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->torch_geometric) (2.1.3)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests->torch_geometric) (3.3.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests->torch_geometric) (3.6)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests->torch_geometric) (2.0.7)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests->torch_geometric) (2023.11.17)\n","Requirement already satisfied: joblib>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from scikit-learn->torch_geometric) (1.3.2)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn->torch_geometric) (3.2.0)\n"]}],"source":["pip install torch_geometric"]},{"cell_type":"markdown","source":["\n","# Import potrzebnych bibliotek\n"],"metadata":{"id":"Q7Lr1UTKt_SX"}},{"cell_type":"code","source":["import pandas as pd\n","import torch\n","from torch_geometric.data import Data\n","from torch_geometric.nn import GCNConv\n","import numpy as np\n","import torch.nn.functional as F\n","from torch_geometric.nn import GCNConv, GAE\n","from sklearn.cluster import KMeans\n","from sklearn.preprocessing import LabelEncoder\n","from random import random\n","np.random.seed(0)"],"metadata":{"id":"_1upp6AbpDZB","executionInfo":{"status":"ok","timestamp":1704760947686,"user_tz":-60,"elapsed":7780,"user":{"displayName":"Marcin Zagrodzki","userId":"16643678327861906315"}}},"execution_count":2,"outputs":[]},{"cell_type":"markdown","source":["# Wczytanie Odpowiednich Bibliotek"],"metadata":{"id":"uXKNJ3qduIc7"}},{"cell_type":"code","source":["workpiece_df = pd.read_csv('Workpiece.csv', encoding='ISO-8859-1' , sep=';')\n","mfg_features_df = pd.read_csv('Mfg_Features.csv', encoding='ISO-8859-1' , sep=';')\n","mfg_process_df = pd.read_csv('Mfg_Process.csv', encoding='ISO-8859-1' , sep=';')\n","Material_df = pd.read_csv('Material.csv', encoding='ISO-8859-1' , sep=';')\n","Operation_df = pd.read_csv('Operation.csv', encoding='ISO-8859-1' , sep=';')\n","Rawpiece_df = pd.read_csv('Rawpiece.csv', encoding='ISO-8859-1' , sep=';')\n","Work_Order = pd.read_csv('Work_Order.csv', encoding='ISO-8859-1' , sep=';')\n","Machine_Tool_df = pd.read_csv('Machine_Tool.csv', encoding='ISO-8859-1' , sep=';')"],"metadata":{"id":"ocuEW2cSo9Xg","executionInfo":{"status":"ok","timestamp":1704760947686,"user_tz":-60,"elapsed":18,"user":{"displayName":"Marcin Zagrodzki","userId":"16643678327861906315"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["unique_parts = workpiece_df['IDPart'].unique()\n","num_w_df = len(unique_parts)\n","part_index = {part: index for index, part in enumerate(unique_parts)}"],"metadata":{"id":"aSKDli_bpNsR","executionInfo":{"status":"ok","timestamp":1704760947686,"user_tz":-60,"elapsed":17,"user":{"displayName":"Marcin Zagrodzki","userId":"16643678327861906315"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["# Przygotowanie danych do GNN\n","le = LabelEncoder()\n","for df in [mfg_process_df, workpiece_df, mfg_features_df, Material_df, Operation_df, Rawpiece_df, Work_Order, Machine_Tool_df]:\n","    for col in df.columns:\n","        if df[col].dtype == 'object':\n","            df[col] = le.fit_transform(df[col])\n","\n","# id_to_index_workpiece = {id: idx for idx, id in enumerate(workpiece_df['IDPart'].unique())}\n","# id_to_index_mfg_process = {id: idx + len(id_to_index_workpiece) for idx, id in enumerate(mfg_process_df['IDMPP'].unique())}\n","# id_to_index_mfg_features = {id: idx + len(id_to_index_mfg_process) + len(id_to_index_workpiece) for idx, id in enumerate(mfg_features_df['IDFtr'].unique())}\n","# id_to_index_material = {id: idx + len(id_to_index_mfg_process) + len(id_to_index_workpiece) + len(id_to_index_mfg_features) for idx, id in enumerate(Material_df['IDMat'].unique())}\n","# id_to_index_operation = {id: idx + len(id_to_index_mfg_process) + len(id_to_index_workpiece) + len(id_to_index_mfg_features) + len(id_to_index_material) for idx, id in enumerate(Operation_df['IDOP'].unique())}\n"],"metadata":{"id":"it8wadWZh2o-","executionInfo":{"status":"ok","timestamp":1704760947687,"user_tz":-60,"elapsed":17,"user":{"displayName":"Marcin Zagrodzki","userId":"16643678327861906315"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["def create_id_to_index_map(df, column_name, starting_index=0):\n","    return {id: idx + starting_index for idx, id in enumerate(df[column_name].unique())}\n","\n","# Initialize starting index\n","current_index = 0\n","\n","# Creating dictionaries for each category\n","id_to_index_workpiece = create_id_to_index_map(workpiece_df, 'IDPart', current_index)\n","current_index += len(id_to_index_workpiece)\n","\n","id_to_index_mfg_process = create_id_to_index_map(mfg_process_df, 'IDMPP', current_index)\n","current_index += len(id_to_index_mfg_process)\n","\n","id_to_index_mfg_features = create_id_to_index_map(mfg_features_df, 'IDFtr', current_index)\n","current_index += len(id_to_index_mfg_features)\n","\n","id_to_index_material = create_id_to_index_map(Material_df, 'IDMat', current_index)\n","current_index += len(id_to_index_material)\n","\n","id_to_index_operation = create_id_to_index_map(Operation_df, 'IDOP', current_index)\n","current_index += len(id_to_index_operation)\n","\n","id_to_index_rawpiece = create_id_to_index_map(Rawpiece_df, 'IDRaw', current_index)\n","current_index += len(id_to_index_rawpiece)\n","\n","id_to_index_work_order = create_id_to_index_map(Work_Order, 'IDORD', current_index)\n","current_index += len(id_to_index_work_order)\n","\n","id_to_index_machine_tool = create_id_to_index_map(Machine_Tool_df, 'IDMT', current_index)\n","\n"],"metadata":{"id":"iGvtmASbZ-yY","executionInfo":{"status":"ok","timestamp":1704760947687,"user_tz":-60,"elapsed":16,"user":{"displayName":"Marcin Zagrodzki","userId":"16643678327861906315"}}},"execution_count":6,"outputs":[]},{"cell_type":"markdown","source":[],"metadata":{"id":"Hlrt3H0LZMgZ"}},{"cell_type":"code","source":["print(f'id_to_index_workpiece to: {id_to_index_workpiece}')\n","print(f'id_to_index_mfg_process to: {id_to_index_mfg_process}')\n","print(f'id_to_index_mfg_features to: {id_to_index_mfg_features}')\n","print(f'id_to_index_material to: {id_to_index_material}')\n","print(f'id_to_index_operation to: {id_to_index_operation}')\n","print(f'id_to_index_rawpiece to: {id_to_index_rawpiece}')\n","print(f'id_to_index_work_order to: {id_to_index_work_order}')\n","print(f'id_to_index_machine_tool to: {id_to_index_machine_tool}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NFmyF9mVl0Zf","executionInfo":{"status":"ok","timestamp":1704760948124,"user_tz":-60,"elapsed":453,"user":{"displayName":"Marcin Zagrodzki","userId":"16643678327861906315"}},"outputId":"6932cf4e-9f34-465f-ae05-b2da95055daa"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["id_to_index_workpiece to: {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, 10: 10, 11: 11, 12: 12, 13: 13, 14: 14, 15: 15, 16: 16, 17: 17, 18: 18, 19: 19, 20: 20, 21: 21, 22: 22, 23: 23, 24: 24, 25: 25, 26: 26, 27: 27, 28: 28, 29: 29, 30: 30, 31: 31, 32: 32, 33: 33, 34: 34, 35: 35, 36: 36, 37: 37, 38: 38, 39: 39, 40: 40, 41: 41, 42: 42, 43: 43, 44: 44, 45: 45, 46: 46, 47: 47, 48: 48, 49: 49}\n","id_to_index_mfg_process to: {0: 50, 1: 51, 2: 52, 3: 53, 4: 54, 5: 55, 6: 56, 7: 57, 8: 58, 9: 59, 10: 60, 11: 61, 12: 62, 13: 63, 14: 64, 15: 65, 16: 66, 17: 67, 18: 68, 19: 69, 20: 70, 21: 71, 22: 72, 23: 73, 24: 74, 25: 75, 26: 76, 27: 77, 28: 78, 29: 79, 30: 80, 31: 81, 32: 82, 33: 83, 34: 84, 35: 85, 36: 86, 37: 87, 38: 88, 39: 89, 40: 90, 41: 91, 42: 92, 43: 93, 44: 94, 45: 95, 46: 96, 47: 97, 48: 98, 49: 99}\n","id_to_index_mfg_features to: {0: 100, 1: 101, 2: 102, 3: 103, 4: 104, 5: 105, 6: 106, 7: 107, 8: 108, 9: 109, 10: 110, 11: 111, 12: 112, 13: 113, 14: 114, 15: 115, 16: 116, 17: 117, 18: 118, 19: 119, 20: 120, 21: 121, 22: 122, 23: 123, 24: 124, 25: 125, 26: 126, 27: 127, 28: 128, 29: 129, 30: 130, 31: 131, 32: 132, 33: 133, 34: 134, 35: 135, 36: 136, 37: 137, 38: 138, 39: 139, 40: 140, 41: 141, 42: 142, 43: 143, 44: 144, 45: 145, 46: 146, 47: 147, 48: 148, 49: 149, 50: 150, 51: 151, 52: 152, 53: 153, 54: 154, 55: 155, 56: 156, 57: 157, 58: 158, 59: 159, 60: 160, 61: 161, 62: 162, 63: 163, 64: 164, 65: 165, 66: 166, 67: 167, 68: 168, 69: 169, 70: 170, 71: 171, 72: 172, 73: 173, 74: 174, 75: 175, 76: 176, 77: 177, 78: 178, 79: 179, 80: 180, 81: 181, 82: 182, 83: 183, 84: 184, 85: 185, 86: 186, 87: 187, 88: 188, 89: 189, 90: 190, 91: 191, 92: 192, 93: 193, 94: 194, 95: 195, 96: 196, 97: 197, 98: 198, 99: 199, 100: 200, 101: 201, 102: 202, 103: 203, 104: 204, 105: 205, 106: 206, 107: 207, 108: 208, 109: 209, 110: 210, 111: 211, 112: 212, 113: 213, 114: 214, 115: 215, 116: 216, 117: 217, 118: 218, 119: 219, 120: 220, 121: 221, 122: 222, 123: 223, 124: 224, 125: 225, 126: 226, 127: 227, 128: 228, 129: 229, 130: 230, 131: 231, 132: 232, 133: 233, 134: 234, 135: 235, 136: 236, 137: 237, 138: 238, 139: 239, 140: 240, 141: 241, 142: 242, 143: 243, 144: 244, 145: 245, 146: 246, 147: 247, 148: 248, 149: 249, 150: 250, 151: 251, 152: 252, 153: 253, 154: 254, 155: 255, 156: 256, 157: 257, 158: 258, 159: 259, 160: 260, 161: 261, 162: 262, 163: 263, 164: 264, 165: 265, 166: 266, 167: 267, 168: 268, 169: 269, 170: 270, 171: 271, 172: 272, 173: 273, 174: 274, 175: 275, 176: 276, 177: 277, 178: 278, 179: 279, 180: 280, 181: 281, 182: 282, 183: 283, 184: 284, 185: 285, 186: 286, 187: 287, 188: 288, 189: 289, 190: 290, 191: 291, 192: 292, 193: 293, 194: 294, 195: 295, 196: 296, 197: 297, 198: 298, 199: 299, 200: 300, 201: 301, 202: 302, 203: 303, 204: 304, 205: 305, 206: 306, 207: 307, 208: 308, 209: 309, 210: 310, 211: 311, 212: 312, 213: 313, 214: 314, 215: 315, 216: 316, 217: 317, 218: 318, 219: 319, 220: 320, 221: 321, 222: 322, 223: 323, 224: 324, 225: 325, 226: 326, 227: 327, 228: 328, 229: 329, 230: 330, 231: 331, 232: 332, 233: 333, 234: 334, 235: 335, 236: 336, 237: 337, 238: 338, 239: 339, 240: 340, 241: 341, 242: 342, 243: 343, 244: 344, 245: 345, 246: 346, 247: 347, 248: 348, 249: 349, 250: 350, 251: 351, 252: 352, 253: 353, 254: 354, 255: 355, 256: 356, 257: 357, 258: 358, 259: 359, 260: 360, 261: 361, 262: 362, 263: 363, 264: 364, 265: 365, 266: 366, 267: 367, 268: 368, 269: 369, 270: 370, 271: 371, 272: 372, 273: 373, 274: 374, 275: 375, 276: 376, 277: 377, 278: 378, 279: 379, 280: 380, 281: 381, 282: 382, 283: 383, 284: 384, 285: 385, 286: 386, 287: 387, 288: 388, 289: 389, 290: 390, 291: 391, 292: 392, 293: 393, 294: 394, 295: 395, 296: 396, 297: 397, 298: 398, 299: 399, 300: 400, 301: 401, 302: 402, 303: 403, 304: 404, 305: 405, 306: 406, 307: 407, 308: 408, 309: 409, 310: 410, 311: 411, 312: 412, 313: 413, 314: 414, 315: 415, 316: 416, 317: 417, 318: 418, 319: 419, 320: 420, 321: 421, 322: 422, 323: 423, 324: 424, 325: 425, 326: 426, 327: 427, 328: 428, 329: 429, 330: 430, 331: 431, 332: 432, 333: 433, 334: 434, 335: 435, 336: 436, 337: 437, 338: 438, 339: 439, 340: 440, 341: 441, 342: 442, 343: 443, 344: 444, 345: 445, 346: 446, 347: 447, 348: 448, 349: 449, 350: 450, 351: 451, 352: 452, 353: 453, 354: 454, 355: 455, 356: 456, 357: 457, 358: 458, 359: 459, 360: 460, 361: 461, 362: 462, 363: 463, 364: 464, 365: 465, 366: 466, 367: 467, 368: 468, 369: 469, 370: 470, 371: 471, 372: 472, 373: 473, 374: 474, 375: 475, 376: 476, 377: 477, 378: 478, 379: 479, 380: 480, 381: 481, 382: 482, 383: 483, 384: 484, 385: 485, 386: 486, 387: 487, 388: 488, 389: 489, 390: 490, 391: 491, 392: 492, 393: 493, 394: 494, 395: 495, 396: 496, 397: 497, 398: 498, 399: 499, 400: 500, 401: 501, 402: 502, 403: 503, 404: 504, 405: 505, 406: 506, 407: 507, 408: 508, 409: 509, 410: 510, 411: 511, 412: 512, 413: 513, 414: 514, 415: 515, 416: 516, 417: 517, 418: 518, 419: 519, 420: 520, 421: 521, 422: 522, 423: 523, 424: 524, 425: 525, 426: 526, 427: 527, 428: 528, 429: 529, 430: 530, 431: 531, 432: 532, 433: 533, 434: 534, 435: 535, 436: 536, 437: 537, 438: 538, 439: 539, 440: 540, 441: 541, 442: 542, 443: 543, 444: 544, 445: 545, 446: 546, 447: 547, 448: 548, 449: 549, 450: 550, 451: 551, 452: 552, 453: 553, 454: 554, 455: 555, 456: 556, 457: 557, 458: 558, 459: 559, 460: 560, 461: 561, 462: 562, 463: 563, 464: 564, 465: 565, 466: 566, 467: 567, 468: 568, 469: 569, 470: 570, 471: 571, 472: 572, 473: 573, 474: 574, 475: 575, 476: 576, 477: 577, 478: 578, 479: 579, 480: 580, 481: 581, 482: 582, 483: 583, 484: 584, 485: 585, 486: 586, 487: 587, 488: 588, 489: 589, 490: 590, 491: 591, 492: 592, 493: 593, 494: 594, 495: 595, 496: 596, 497: 597, 498: 598, 499: 599, 500: 600, 501: 601, 502: 602, 503: 603, 504: 604, 505: 605, 506: 606, 507: 607, 508: 608, 509: 609, 510: 610, 511: 611, 512: 612, 513: 613, 514: 614, 515: 615, 516: 616, 517: 617, 518: 618, 519: 619, 520: 620, 521: 621, 522: 622, 523: 623, 524: 624, 525: 625, 526: 626, 527: 627, 528: 628, 529: 629, 530: 630, 531: 631, 532: 632, 533: 633, 534: 634, 535: 635, 536: 636, 537: 637, 538: 638, 539: 639, 540: 640, 541: 641, 542: 642, 543: 643, 544: 644, 545: 645, 546: 646, 547: 647, 548: 648, 549: 649, 550: 650, 551: 651, 552: 652, 553: 653, 554: 654, 555: 655, 556: 656, 557: 657, 558: 658, 559: 659, 560: 660, 561: 661, 562: 662, 563: 663, 564: 664, 565: 665, 566: 666, 567: 667, 568: 668, 569: 669, 570: 670, 571: 671, 572: 672, 573: 673, 574: 674, 575: 675, 576: 676, 577: 677, 578: 678, 579: 679, 580: 680, 581: 681, 582: 682, 583: 683, 584: 684, 585: 685, 586: 686, 587: 687, 588: 688, 589: 689, 590: 690, 591: 691, 592: 692, 593: 693, 594: 694, 595: 695, 596: 696, 597: 697, 598: 698, 599: 699, 600: 700, 601: 701, 602: 702, 603: 703, 604: 704, 605: 705, 606: 706, 607: 707, 608: 708, 609: 709, 610: 710, 611: 711, 612: 712, 613: 713, 614: 714, 615: 715, 616: 716, 617: 717, 618: 718, 619: 719, 620: 720, 621: 721, 622: 722, 623: 723, 624: 724, 625: 725, 626: 726, 627: 727, 628: 728, 629: 729, 630: 730, 631: 731, 632: 732, 633: 733, 634: 734, 635: 735, 636: 736, 637: 737, 638: 738, 639: 739, 640: 740, 641: 741, 642: 742, 643: 743, 644: 744, 645: 745, 646: 746, 647: 747, 648: 748, 649: 749, 650: 750, 651: 751, 652: 752, 653: 753, 654: 754, 655: 755, 656: 756, 657: 757, 658: 758, 659: 759, 660: 760, 661: 761, 662: 762, 663: 763, 664: 764, 665: 765, 666: 766, 667: 767, 668: 768, 669: 769, 670: 770, 671: 771, 672: 772, 673: 773, 674: 774, 675: 775, 676: 776, 677: 777, 678: 778, 679: 779, 680: 780, 681: 781, 682: 782, 683: 783, 684: 784, 685: 785, 686: 786, 687: 787, 688: 788, 689: 789, 690: 790, 691: 791, 692: 792, 693: 793, 694: 794, 695: 795, 696: 796, 697: 797, 698: 798, 699: 799, 700: 800, 701: 801, 702: 802, 703: 803, 704: 804, 705: 805, 706: 806, 707: 807, 708: 808, 709: 809, 710: 810, 711: 811, 712: 812, 713: 813, 714: 814, 715: 815, 716: 816, 717: 817, 718: 818, 719: 819, 720: 820, 721: 821, 722: 822, 723: 823, 724: 824, 725: 825, 726: 826, 727: 827, 728: 828, 729: 829, 730: 830, 731: 831, 732: 832, 733: 833, 734: 834, 735: 835, 736: 836, 737: 837, 738: 838, 739: 839, 740: 840, 741: 841, 742: 842, 743: 843, 744: 844, 745: 845, 746: 846, 747: 847, 748: 848, 749: 849, 750: 850, 751: 851, 752: 852, 753: 853, 754: 854, 755: 855, 756: 856, 757: 857, 758: 858, 759: 859, 760: 860, 761: 861, 762: 862, 763: 863, 764: 864, 765: 865, 766: 866, 767: 867, 768: 868, 769: 869, 770: 870, 771: 871, 772: 872, 773: 873, 774: 874, 775: 875, 776: 876, 777: 877, 778: 878, 779: 879, 780: 880, 781: 881, 782: 882, 783: 883, 784: 884, 785: 885, 786: 886, 787: 887, 788: 888, 789: 889, 790: 890, 791: 891, 792: 892, 793: 893, 794: 894, 795: 895, 796: 896, 797: 897, 798: 898, 799: 899, 800: 900, 801: 901, 802: 902, 803: 903, 804: 904, 805: 905, 806: 906}\n","id_to_index_material to: {0: 907, 1: 908, 2: 909, 3: 910, 4: 911, 5: 912, 6: 913, 7: 914, 8: 915, 9: 916, 10: 917, 11: 918, 12: 919, 13: 920, 14: 921, 15: 922, 16: 923, 17: 924, 18: 925, 19: 926}\n","id_to_index_operation to: {0: 927, 1: 928, 2: 929, 3: 930, 4: 931, 5: 932, 6: 933, 7: 934, 8: 935, 9: 936, 10: 937, 11: 938, 12: 939, 13: 940, 14: 941, 15: 942, 16: 943, 17: 944, 18: 945, 19: 946, 20: 947, 21: 948, 22: 949, 23: 950, 24: 951, 25: 952, 26: 953, 27: 954, 28: 955, 29: 956, 30: 957, 31: 958, 32: 959, 33: 960, 34: 961, 35: 962, 36: 963, 37: 964, 38: 965, 39: 966, 40: 967, 41: 968, 42: 969, 43: 970, 44: 971, 45: 972, 46: 973, 47: 974, 48: 975, 49: 976, 50: 977, 51: 978, 52: 979, 53: 980, 54: 981, 55: 982, 56: 983, 57: 984, 58: 985, 59: 986, 60: 987, 61: 988, 62: 989, 63: 990, 64: 991, 65: 992, 66: 993, 67: 994, 68: 995, 69: 996, 70: 997, 71: 998, 72: 999, 73: 1000, 74: 1001, 75: 1002, 76: 1003, 77: 1004, 78: 1005, 79: 1006, 80: 1007, 81: 1008, 82: 1009, 83: 1010, 84: 1011, 85: 1012, 86: 1013, 87: 1014, 88: 1015, 89: 1016, 90: 1017, 91: 1018, 92: 1019, 93: 1020, 94: 1021, 95: 1022, 96: 1023, 97: 1024, 98: 1025, 99: 1026, 100: 1027, 101: 1028, 102: 1029, 103: 1030, 104: 1031, 105: 1032, 106: 1033, 107: 1034, 108: 1035, 109: 1036, 110: 1037, 111: 1038, 112: 1039, 113: 1040, 114: 1041, 115: 1042, 116: 1043, 117: 1044, 118: 1045, 119: 1046, 120: 1047, 121: 1048, 122: 1049, 123: 1050, 124: 1051, 125: 1052, 126: 1053, 127: 1054, 128: 1055, 129: 1056, 130: 1057, 131: 1058, 132: 1059, 133: 1060, 134: 1061, 135: 1062, 136: 1063, 137: 1064, 138: 1065, 139: 1066, 140: 1067, 141: 1068, 142: 1069, 143: 1070, 144: 1071, 145: 1072, 146: 1073, 147: 1074, 148: 1075, 149: 1076, 150: 1077, 151: 1078, 152: 1079, 153: 1080, 154: 1081, 155: 1082, 156: 1083, 157: 1084, 158: 1085, 159: 1086, 160: 1087, 161: 1088, 162: 1089, 163: 1090, 164: 1091, 165: 1092, 166: 1093, 167: 1094, 168: 1095, 169: 1096, 170: 1097, 171: 1098, 172: 1099, 173: 1100, 174: 1101, 175: 1102, 176: 1103, 177: 1104, 178: 1105, 179: 1106, 180: 1107, 181: 1108, 182: 1109, 183: 1110, 184: 1111, 185: 1112, 186: 1113, 187: 1114, 188: 1115, 189: 1116, 190: 1117, 191: 1118, 192: 1119, 193: 1120, 194: 1121, 195: 1122, 196: 1123, 197: 1124, 198: 1125, 199: 1126, 200: 1127, 201: 1128, 202: 1129, 203: 1130, 204: 1131, 205: 1132, 206: 1133, 207: 1134, 208: 1135, 209: 1136, 210: 1137, 211: 1138, 212: 1139, 213: 1140, 214: 1141, 215: 1142, 216: 1143, 217: 1144, 218: 1145, 219: 1146, 220: 1147, 221: 1148, 222: 1149, 223: 1150, 224: 1151, 225: 1152, 226: 1153, 227: 1154, 228: 1155, 229: 1156, 230: 1157, 231: 1158, 232: 1159, 233: 1160, 234: 1161, 235: 1162, 236: 1163, 237: 1164, 238: 1165, 239: 1166, 240: 1167, 241: 1168, 242: 1169, 243: 1170, 244: 1171, 245: 1172, 246: 1173, 247: 1174, 248: 1175, 249: 1176, 250: 1177, 251: 1178, 252: 1179, 253: 1180, 254: 1181, 255: 1182, 256: 1183, 257: 1184, 258: 1185, 259: 1186, 260: 1187, 261: 1188, 262: 1189, 263: 1190, 264: 1191, 265: 1192, 266: 1193, 267: 1194, 268: 1195, 269: 1196, 270: 1197, 271: 1198, 272: 1199, 273: 1200, 274: 1201, 275: 1202, 276: 1203, 277: 1204, 278: 1205, 279: 1206, 280: 1207, 281: 1208, 282: 1209, 283: 1210, 284: 1211, 285: 1212, 286: 1213, 287: 1214, 288: 1215, 289: 1216, 290: 1217, 291: 1218, 292: 1219, 293: 1220, 294: 1221, 295: 1222, 296: 1223, 297: 1224, 298: 1225, 299: 1226, 300: 1227, 301: 1228, 302: 1229, 303: 1230, 304: 1231, 305: 1232, 306: 1233, 307: 1234, 308: 1235, 309: 1236, 310: 1237, 311: 1238, 312: 1239, 313: 1240}\n","id_to_index_rawpiece to: {0: 1241, 1: 1242, 2: 1243, 3: 1244, 4: 1245, 5: 1246, 6: 1247, 7: 1248, 8: 1249, 9: 1250, 10: 1251, 11: 1252, 12: 1253, 13: 1254, 14: 1255, 15: 1256, 16: 1257, 17: 1258, 18: 1259, 19: 1260, 20: 1261, 21: 1262, 22: 1263, 23: 1264, 24: 1265, 25: 1266, 26: 1267, 27: 1268, 28: 1269, 29: 1270, 30: 1271, 31: 1272, 32: 1273, 33: 1274, 34: 1275, 35: 1276, 36: 1277, 37: 1278, 38: 1279, 39: 1280, 40: 1281, 41: 1282, 42: 1283, 43: 1284, 44: 1285, 45: 1286, 46: 1287, 47: 1288, 48: 1289, 49: 1290}\n","id_to_index_work_order to: {0: 1291, 1: 1292, 2: 1293, 3: 1294, 4: 1295, 5: 1296, 6: 1297, 7: 1298, 8: 1299, 9: 1300, 10: 1301, 11: 1302, 12: 1303, 13: 1304, 14: 1305, 15: 1306, 16: 1307, 17: 1308, 18: 1309, 19: 1310, 20: 1311, 21: 1312, 22: 1313, 23: 1314, 24: 1315, 25: 1316, 26: 1317, 27: 1318, 28: 1319, 29: 1320, 30: 1321, 31: 1322, 32: 1323, 33: 1324, 34: 1325, 35: 1326, 36: 1327, 37: 1328, 38: 1329, 39: 1330, 40: 1331, 41: 1332, 42: 1333, 43: 1334, 44: 1335, 45: 1336, 46: 1337, 47: 1338, 48: 1339, 49: 1340}\n","id_to_index_machine_tool to: {0: 1341, 1: 1342, 2: 1343, 3: 1344, 4: 1345, 5: 1346, 6: 1347, 7: 1348, 8: 1349, 9: 1350, 10: 1351, 11: 1352, 12: 1353, 13: 1354, 14: 1355, 15: 1356, 16: 1357, 17: 1358, 18: 1359, 19: 1360, 20: 1361, 21: 1362, 22: 1363, 23: 1364, 24: 1365, 25: 1366, 26: 1367}\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"_R5NX6ELaKA8","executionInfo":{"status":"ok","timestamp":1704760948124,"user_tz":-60,"elapsed":12,"user":{"displayName":"Marcin Zagrodzki","userId":"16643678327861906315"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["# Parametry do GNN\n","\n","workpiece_nodes = torch.tensor(workpiece_df[['Mass','GTol','GRa','OX','OY','OZ', 'JKKT']].values, dtype=torch.float)\n","mfg_process_nodes = torch.tensor(mfg_process_df[['IDRAW']].values, dtype=torch.float)\n","mfg_features_nodes = torch.tensor(mfg_features_df[['D', 'L']].values, dtype=torch.float)\n","material_nodes = torch.tensor(Material_df[['Mat_EN','Mat_PN','CMC','SMC','C','HB','Rm','kc04','kc11']].values, dtype=torch.float)\n","operation_nodes = torch.tensor(Operation_df[['Workstation','OPContent']].values, dtype=torch.float)\n","rawpiece_nodes = torch.tensor(Rawpiece_df[['DRaw','TDRaw','NOP','Mass','Price','LPF','LSZ','LOD','MU','NW']].values, dtype=torch.float)\n","work_order_nodes = torch.tensor(Work_Order[['Quantity']].values, dtype=torch.float)\n","machine_tool_nodes = torch.tensor(Machine_Tool_df[['Method','SubType','MTDescription','Power','n_min','n_max','ToolSocket']].values, dtype=torch.float)\n","\n","\n","\n","max_cols = max(workpiece_nodes.shape[1], mfg_process_nodes.shape[1], mfg_process_nodes.shape[1], material_nodes.shape[1], operation_nodes.shape[1], rawpiece_nodes.shape[1], work_order_nodes.shape[1], machine_tool_nodes.shape[1] )\n","\n","def pad_tensor(tensor, length):\n","    return torch.cat([tensor, torch.zeros((tensor.shape[0], length - tensor.shape[1]))], dim=1)\n","\n","# Wypełnianie zerami\n","workpiece_nodes_padded = pad_tensor(workpiece_nodes, max_cols)\n","mfg_process_nodes_padded = pad_tensor(mfg_process_nodes, max_cols)\n","mfg_features_nodes_padded = pad_tensor(mfg_features_nodes, max_cols)\n","material_nodes_padded = pad_tensor(material_nodes, max_cols)\n","operation_nodes_padded = pad_tensor(operation_nodes, max_cols)\n","rawpiece_nodes_padded = pad_tensor(rawpiece_nodes, max_cols)\n","work_order_nodes_padded = pad_tensor(work_order_nodes, max_cols)\n","machine_tool_nodes_padded = pad_tensor(machine_tool_nodes, max_cols)\n","\n","# Konkatenacja/Łączenie tensorów\n","nodes = torch.cat([workpiece_nodes_padded, mfg_process_nodes_padded, mfg_features_nodes_padded, material_nodes_padded, operation_nodes_padded, rawpiece_nodes_padded, work_order_nodes_padded, machine_tool_nodes_padded], dim=0)"],"metadata":{"id":"zPQL8k3eh2s2","executionInfo":{"status":"ok","timestamp":1704760948125,"user_tz":-60,"elapsed":12,"user":{"displayName":"Marcin Zagrodzki","userId":"16643678327861906315"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["# Krawedzie do GNN\n","edge_index_list = []\n","# MfgProcess -> Workpiece\n","for _, row in mfg_process_df.iterrows():\n","    src = id_to_index_mfg_process[row['IDMPP']]\n","    dst = id_to_index_workpiece[row['IDPart']]\n","    edge_index_list.append([src, dst])\n","\n","# MfgFeatures -> Workpiece\n","for _, row in mfg_features_df.iterrows():\n","    src = id_to_index_mfg_features[row['IDFtr']]\n","    dst = id_to_index_workpiece[row['IDPart']]\n","    edge_index_list.append([src, dst])\n","\n","# Workpiece -> Material\n","for _, row in workpiece_df.iterrows():\n","    src = id_to_index_workpiece[row['IDPart']]\n","    dst = id_to_index_material[row['IDMat']]\n","    edge_index_list.append([src, dst])\n","\n","# Rawpiece -> Material\n","for _, row in Rawpiece_df.iterrows():\n","    src = id_to_index_rawpiece[row['IDRaw']]\n","    dst = id_to_index_material[row['IDMat']]\n","    edge_index_list.append([src, dst])\n","\n","# MfgProcess -> Rawpiece\n","for _, row in mfg_process_df.iterrows():\n","    src = id_to_index_mfg_process[row['IDMPP']]\n","    dst = id_to_index_rawpiece[row['IDRAW']]\n","    edge_index_list.append([src, dst])\n","\n","# WorkOrder -> MfgProcess\n","for _, row in mfg_process_df.iterrows():\n","    src = id_to_index_work_order[row['IDOrder']]\n","    dst = id_to_index_mfg_process[row['IDMPP']]\n","    edge_index_list.append([src, dst])\n","\n","# MfgProcess -> Operation\n","for _, row in Operation_df.iterrows():\n","    src = id_to_index_mfg_process[row['IDMPP']]\n","    dst = id_to_index_operation[row['IDOP']]\n","    edge_index_list.append([src, dst])\n","\n","# Operation -> Machines\n","for _, row in Operation_df.iterrows():\n","    src = id_to_index_operation[row['IDOP']]\n","    dst = id_to_index_machine_tool[row['Workstation']]\n","    edge_index_list.append([src, dst])\n","\n","edge_index_tensor = torch.tensor(edge_index_list, dtype=torch.long).t()\n","\n","data = Data(x=nodes, edge_index=edge_index_tensor)"],"metadata":{"id":"G2z2Xbuvh2zG","executionInfo":{"status":"ok","timestamp":1704760948485,"user_tz":-60,"elapsed":371,"user":{"displayName":"Marcin Zagrodzki","userId":"16643678327861906315"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["print(data)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"P-SvgZUrh232","executionInfo":{"status":"ok","timestamp":1704760948485,"user_tz":-60,"elapsed":7,"user":{"displayName":"Marcin Zagrodzki","userId":"16643678327861906315"}},"outputId":"e7d0f69e-6d60-488f-e723-7b1ffcc082c8"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["Data(x=[1368, 10], edge_index=[2, 1685])\n"]}]},{"cell_type":"code","source":["print(nodes[1350])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JuYmJDMvihXl","executionInfo":{"status":"ok","timestamp":1704760948486,"user_tz":-60,"elapsed":5,"user":{"displayName":"Marcin Zagrodzki","userId":"16643678327861906315"}},"outputId":"57b380d6-aaab-4cac-f464-cc234a5845b4"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["tensor([ 0.0000,  2.0000,  8.0000,  5.5000, -1.0000, -1.0000, 10.0000,  0.0000,\n","         0.0000,  0.0000])\n"]}]},{"cell_type":"code","source":["# GCN (Graph Convolutional Network) - agregacja sąsiednich węzłów\n","\n","# Ustalanie rozmiarów wejściowych i wyjściowych\n","input_size = nodes.shape[1]\n","hidden_size = 16  # Pozniej do zmiany na inną wartość (gdy bedzie wiecej danych)\n","output_size = 8  # Do dostosowania do liczby grup przedmiotów\n","\n","class GCNEncoder(torch.nn.Module):\n","    def __init__(self, input_size, hidden_size):\n","        super(GCNEncoder, self).__init__()\n","        self.conv1 = GCNConv(input_size, hidden_size)\n","        self.conv2 = GCNConv(hidden_size, output_size)\n","        #self.conv2 = GCNConv(hidden_size, hidden_size)  #test nr 3\n","\n","    def forward(self, x, edge_index):\n","        x = F.relu(self.conv1(x, edge_index))\n","        return self.conv2(x, edge_index)\n","\n","\n","encoder = GCNEncoder(input_size, hidden_size)\n","model = GAE(encoder)\n","\n","optimizer = torch.optim.Adam(model.parameters(), lr=0.01)\n","\n","def train():\n","    model.train()\n","    optimizer.zero_grad()\n","    z = model.encode(data.x, data.edge_index)  # Uzycie wezłów oraz krawędzi\n","    loss = model.recon_loss(z, data.edge_index)\n","    loss.backward()\n","    optimizer.step()\n","    return loss.item(), z.detach()\n","\n","for epoch in range(200):\n","    loss, z = train()\n","    if epoch % 10 == 0:\n","        print(f'Epoch {epoch}, Loss: {loss}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FITOXKAYuOPX","executionInfo":{"status":"ok","timestamp":1704760951165,"user_tz":-60,"elapsed":2683,"user":{"displayName":"Marcin Zagrodzki","userId":"16643678327861906315"}},"outputId":"1ff9da40-9386-43da-e6eb-7278b4e173fd"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 0, Loss: 34.41291809082031\n","Epoch 10, Loss: 34.19031524658203\n","Epoch 20, Loss: 34.359718322753906\n","Epoch 30, Loss: 34.33380126953125\n","Epoch 40, Loss: 34.251808166503906\n","Epoch 50, Loss: 34.19031524658203\n","Epoch 60, Loss: 34.35430145263672\n","Epoch 70, Loss: 34.29280471801758\n","Epoch 80, Loss: 34.395294189453125\n","Epoch 90, Loss: 34.14931869506836\n","Epoch 100, Loss: 34.16981887817383\n","Epoch 110, Loss: 34.251808166503906\n","Epoch 120, Loss: 34.14931869506836\n","Epoch 130, Loss: 34.149322509765625\n","Epoch 140, Loss: 34.2313117980957\n","Epoch 150, Loss: 34.29280471801758\n","Epoch 160, Loss: 34.06732940673828\n","Epoch 170, Loss: 34.37479782104492\n","Epoch 180, Loss: 34.2313117980957\n","Epoch 190, Loss: 34.2313117980957\n"]}]},{"cell_type":"code","source":["# Uczenie nienadzorowoane -> Podział danych do odpowiednich klastrów\n","\n","# Klasteryzacja (np. za pomocą KMeans)\n","n_clusters = 3  # Ile ma być ostatecznie klastrów?\n","kmeans = KMeans(n_clusters=n_clusters)\n","labels = kmeans.fit_predict(z[:num_w_df])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KU-22qAv9Q--","executionInfo":{"status":"ok","timestamp":1704760951166,"user_tz":-60,"elapsed":13,"user":{"displayName":"Marcin Zagrodzki","userId":"16643678327861906315"}},"outputId":"97756e4d-24f3-4aaf-bc18-bb17d485ec17"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","  warnings.warn(\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"Edf2WxO5pdaF","executionInfo":{"status":"ok","timestamp":1704760951166,"user_tz":-60,"elapsed":9,"user":{"displayName":"Marcin Zagrodzki","userId":"16643678327861906315"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["if pd.notna(workpiece_df['IDPart'].iloc[0]):\n","  index_to_part = {v: k for k, v in part_index.items()}\n","  workpiece_df['IDPart'] = workpiece_df['IDPart'].map(index_to_part)\n","\n","\n","workpiece_df['Cluster'] = labels[:len(workpiece_df)]\n","# Wyświetlenie wyników dla workpiece\n","print(\"Workpiece Nodes and their Clusters:\")\n","print(workpiece_df[['IDPart', 'Cluster']])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HhZthv0R9rM1","executionInfo":{"status":"ok","timestamp":1704760951166,"user_tz":-60,"elapsed":9,"user":{"displayName":"Marcin Zagrodzki","userId":"16643678327861906315"}},"outputId":"879c7820-a1f0-4615-9dd7-0c912828d754"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["Workpiece Nodes and their Clusters:\n","      IDPart  Cluster\n","0   Part0001        1\n","1   Part0002        0\n","2   Part0003        0\n","3   Part0004        0\n","4   Part0005        2\n","5   Part0006        0\n","6   Part0007        2\n","7   Part0008        0\n","8   Part0009        0\n","9   Part0010        0\n","10  Part0011        2\n","11  Part0012        2\n","12  Part0013        0\n","13  Part0014        1\n","14  Part0015        2\n","15  Part0016        1\n","16  Part0017        2\n","17  Part0018        2\n","18  Part0019        2\n","19  Part0020        1\n","20  Part0021        2\n","21  Part0022        2\n","22  Part0023        2\n","23  Part0024        2\n","24  Part0025        0\n","25  Part0026        0\n","26  Part0027        0\n","27  Part0028        0\n","28  Part0029        2\n","29  Part0030        0\n","30  Part0031        2\n","31  Part0032        0\n","32  Part0033        0\n","33  Part0034        0\n","34  Part0035        0\n","35  Part0036        0\n","36  Part0037        0\n","37  Part0038        2\n","38  Part0039        2\n","39  Part0040        2\n","40  Part0041        0\n","41  Part0042        0\n","42  Part0043        0\n","43  Part0044        1\n","44  Part0045        0\n","45  Part0055        0\n","46  Part0057        1\n","47  Part0058        1\n","48  Part0059        1\n","49  Part0060        1\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"ifGxyZMeqirC","executionInfo":{"status":"ok","timestamp":1704760951166,"user_tz":-60,"elapsed":7,"user":{"displayName":"Marcin Zagrodzki","userId":"16643678327861906315"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"WW2ZA-2KmaEl","executionInfo":{"status":"ok","timestamp":1704760951166,"user_tz":-60,"elapsed":7,"user":{"displayName":"Marcin Zagrodzki","userId":"16643678327861906315"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["# Wyświetlenie węzłów Workpiece przypisanych do klastra 0\n","print(\"Wezeł Workpiece w dla Klastra 0:\")\n","print(workpiece_df[workpiece_df['Cluster'] == 0][['IDPart']])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7okY4Htt988C","executionInfo":{"status":"ok","timestamp":1704760951166,"user_tz":-60,"elapsed":7,"user":{"displayName":"Marcin Zagrodzki","userId":"16643678327861906315"}},"outputId":"ff48c228-19df-4005-d08f-87777933d6d1"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["Wezeł Workpiece w dla Klastra 0:\n","      IDPart\n","1   Part0002\n","2   Part0003\n","3   Part0004\n","5   Part0006\n","7   Part0008\n","8   Part0009\n","9   Part0010\n","12  Part0013\n","24  Part0025\n","25  Part0026\n","26  Part0027\n","27  Part0028\n","29  Part0030\n","31  Part0032\n","32  Part0033\n","33  Part0034\n","34  Part0035\n","35  Part0036\n","36  Part0037\n","40  Part0041\n","41  Part0042\n","42  Part0043\n","44  Part0045\n","45  Part0055\n"]}]},{"cell_type":"code","source":["N = len(workpiece_df)  # Liczba węzłów IDPart\n","idpart_labels = labels[:N]"],"metadata":{"id":"_92TTgR6-70l","executionInfo":{"status":"ok","timestamp":1704760951166,"user_tz":-60,"elapsed":5,"user":{"displayName":"Marcin Zagrodzki","userId":"16643678327861906315"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["from sklearn.manifold import TSNE\n","import matplotlib.pyplot as plt\n","\n","# Redukcja wymiarów za pomocą t-SNE\n","tsne = TSNE(n_components=2, perplexity=30, n_iter=300)\n","idpart_tsne = tsne.fit_transform(z[:N])\n","\n","# Wizualizacja\n","plt.figure(figsize=(10, 6))\n","for i in range(n_clusters):  # n_clusters to liczba klastrów\n","    cluster_indices = idpart_labels == i\n","    plt.scatter(idpart_tsne[cluster_indices, 0], idpart_tsne[cluster_indices, 1], label=f'Cluster {i}')\n","plt.title(\"Wizualizacja Węzłów IDPart\")\n","plt.xlabel(\"t-SNE Cecha 1\")\n","plt.ylabel(\"t-SNE Cecha 2\")\n","plt.legend()\n","plt.show()"],"metadata":{"id":"oAndpvDQAICa","colab":{"base_uri":"https://localhost:8080/","height":565},"executionInfo":{"status":"ok","timestamp":1704760951680,"user_tz":-60,"elapsed":518,"user":{"displayName":"Marcin Zagrodzki","userId":"16643678327861906315"}},"outputId":"b5189a05-24d5-47cc-ee0d-d50b0f59a383"},"execution_count":17,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"md3MOF0Umy8J","executionInfo":{"status":"ok","timestamp":1704760951681,"user_tz":-60,"elapsed":16,"user":{"displayName":"Marcin Zagrodzki","userId":"16643678327861906315"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"IKd2D82jpR9P","executionInfo":{"status":"ok","timestamp":1704760951681,"user_tz":-60,"elapsed":15,"user":{"displayName":"Marcin Zagrodzki","userId":"16643678327861906315"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"YO_cnAfapSDu","executionInfo":{"status":"ok","timestamp":1704760951681,"user_tz":-60,"elapsed":14,"user":{"displayName":"Marcin Zagrodzki","userId":"16643678327861906315"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"cBwCc11ipSF6","executionInfo":{"status":"ok","timestamp":1704760952163,"user_tz":-60,"elapsed":495,"user":{"displayName":"Marcin Zagrodzki","userId":"16643678327861906315"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"-ZdH6toIpSIF","executionInfo":{"status":"ok","timestamp":1704760952164,"user_tz":-60,"elapsed":11,"user":{"displayName":"Marcin Zagrodzki","userId":"16643678327861906315"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"UudllVMepSKF","executionInfo":{"status":"ok","timestamp":1704760952164,"user_tz":-60,"elapsed":10,"user":{"displayName":"Marcin Zagrodzki","userId":"16643678327861906315"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"bupixmdmpSMR","executionInfo":{"status":"ok","timestamp":1704760952164,"user_tz":-60,"elapsed":10,"user":{"displayName":"Marcin Zagrodzki","userId":"16643678327861906315"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"mNsk67ywpSOk","executionInfo":{"status":"ok","timestamp":1704760952164,"user_tz":-60,"elapsed":10,"user":{"displayName":"Marcin Zagrodzki","userId":"16643678327861906315"}}},"execution_count":17,"outputs":[]},{"cell_type":"markdown","source":["## Czesc słuząca do testowania tylko!!!\n"],"metadata":{"id":"uLxVtyiopSZ3"}},{"cell_type":"code","source":[],"metadata":{"id":"jgDyGybPpWOK","executionInfo":{"status":"ok","timestamp":1704760952164,"user_tz":-60,"elapsed":9,"user":{"displayName":"Marcin Zagrodzki","userId":"16643678327861906315"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"V9Z3rdrFpZ_R","executionInfo":{"status":"ok","timestamp":1704760952164,"user_tz":-60,"elapsed":9,"user":{"displayName":"Marcin Zagrodzki","userId":"16643678327861906315"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"mQU927Itpb3l","executionInfo":{"status":"ok","timestamp":1704760952165,"user_tz":-60,"elapsed":9,"user":{"displayName":"Marcin Zagrodzki","userId":"16643678327861906315"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["print(workpiece_df)"],"metadata":{"id":"dmnQA7NAtYiU","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704760952165,"user_tz":-60,"elapsed":9,"user":{"displayName":"Marcin Zagrodzki","userId":"16643678327861906315"}},"outputId":"6d56c139-1b62-49da-afd9-ab55623b9499"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["    id    IDPart  PartName  IDMat     Mass  JKKT  Picture  Kind  Category  \\\n","0    0  Part0001         0      3    2.366    11        0     0         0   \n","1    1  Part0002         1     12   18.865    22        1     0         0   \n","2    2  Part0003         2      9    2.395    18        2     0         0   \n","3    3  Part0004         3      2    5.660    20        3     0         0   \n","4    4  Part0005         4      7    4.645    19        4     0         0   \n","5    5  Part0006         5      1    0.641    12        5     0         0   \n","6    6  Part0007         6     14   73.174    26        6     0         0   \n","7    7  Part0008         7      8    2.464    19        7     0         0   \n","8    8  Part0009         8      1    0.747     3        8     0         0   \n","9    9  Part0010         9     11    3.353    15        9     0         0   \n","10  10  Part0011        10     10    0.726    14       10     0         0   \n","11  11  Part0012        11      8    1.995    13       11     0         0   \n","12  12  Part0013        12      5    0.926     6       12     0         0   \n","13  13  Part0014        13      7    1.645    19       13     0         0   \n","14  14  Part0015        14      2    1.746    11       14     0         0   \n","15  15  Part0016        15      5    3.301    30       15     0         0   \n","16  16  Part0017        16     15  142.676    28       16     0         0   \n","17  17  Part0018        17      5    0.881    11       17     0         0   \n","18  18  Part0019        18      4    0.554     5       18     0         0   \n","19  19  Part0020        19      0    0.375    12       19     0         0   \n","20  20  Part0021        20     13    7.053    23       20     0         0   \n","21  21  Part0022        21      0    0.321     1       21     0         0   \n","22  22  Part0023        22      6    4.633    19       22     0         0   \n","23  23  Part0024        23      4    0.855     4       23     0         0   \n","24  24  Part0025        24      3   13.659    31       24     0         0   \n","25  25  Part0026        25      4   15.638    25       25     0         0   \n","26  26  Part0027        26      0    0.160     7       26     0         0   \n","27  27  Part0028        27      3    0.383     2       27     0         0   \n","28  28  Part0029        28      6    3.040    13       28     0         0   \n","29  29  Part0030        29      7    0.984    13       29     0         0   \n","30  30  Part0031        30     13   61.534    27       30     0         0   \n","31  31  Part0032        31      1    0.345     9       31     0         0   \n","32  32  Part0033        32     10    6.536    24       32     0         0   \n","33  33  Part0034        33     19    6.830    36       33     0         0   \n","34  34  Part0035        34     11    2.706    32       34     0         0   \n","35  35  Part0036        35     12    3.950    35       49     0         0   \n","36  36  Part0037        36      5    1.154    16       35     0         0   \n","37  37  Part0038        37      2    0.906     8       36     0         0   \n","38  38  Part0039        38      8    1.317    33       37     0         0   \n","39  39  Part0040        39      9    2.456    18       38     0         0   \n","40  40  Part0041        40      6    0.773    19       39     0         0   \n","41  41  Part0042        41     18    1.231    17       40     0         0   \n","42  42  Part0043        42     18    0.420    17       41     0         0   \n","43  43  Part0044        43     18    0.201    10       42     0         0   \n","44  44  Part0045        44     17    1.859    34       43     0         0   \n","45  45  Part0055        45     11    0.362    14       44     0         0   \n","46  46  Part0057        46      6    4.242    21       45     0         0   \n","47  47  Part0058        47     16    2.745    29       46     0         0   \n","48  48  Part0059        48      7    5.909     0       47     0         0   \n","49  49  Part0060        49      0    8.847     0       48     0         0   \n","\n","    GTol  GRa  OX  OY  OZ  DVI  DVK    FR  Cluster  \n","0     12    5   0   0   0    0    0  True        1  \n","1     12    5   0   0   0    0    0  True        0  \n","2     12    5   0   0   0    0    0  True        0  \n","3     12    5   0   0   0    0    0  True        0  \n","4     12    5   0   0   0    0    0  True        2  \n","5     12    5   0   0   0    0    0  True        0  \n","6     12    5   0   0   0    0    0  True        2  \n","7     12    5   0   0   0    0    0  True        0  \n","8     12    5   0   0   0    0    0  True        0  \n","9     12    5   0   0   0    0    0  True        0  \n","10    12    5   0   0   0    0    0  True        2  \n","11    12    5   0   0   0    0    0  True        2  \n","12    12    5   0   0   0    0    0  True        0  \n","13    12    5   0   0   0    0    0  True        1  \n","14    12    5   0   0   0    0    0  True        2  \n","15    12    5   0   0   0    0    0  True        1  \n","16    12    5   0   0   0    0    0  True        2  \n","17    12    5   0   0   0    0    0  True        2  \n","18    12    5   0   0   0    0    0  True        2  \n","19    12    5   0   0   0    0    0  True        1  \n","20    12    5   0   0   0    0    0  True        2  \n","21    12    5   0   0   0    0    0  True        2  \n","22    12    5   0   0   0    0    0  True        2  \n","23    12    5   0   0   0    0    0  True        2  \n","24    12    5   0   0   0    0    0  True        0  \n","25    12    5   0   0   0    0    0  True        0  \n","26    12    5   0   0   0    0    0  True        0  \n","27    12    5   0   0   0    0    0  True        0  \n","28    12    5   0   0   0    0    0  True        2  \n","29    12    5   0   0   0    0    0  True        0  \n","30    12    5   0   0   0    0    0  True        2  \n","31    12    5   0   0   0    0    0  True        0  \n","32    12    5   0   0   0    0    0  True        0  \n","33    12    5   0   0   0    0    0  True        0  \n","34    12    5   0   0   0    0    0  True        0  \n","35    12    5   0   0   0    0    0  True        0  \n","36    12    5   0   0   0    0    0  True        0  \n","37    12    5   0   0   0    0    0  True        2  \n","38    12    5   0   0   0    0    0  True        2  \n","39    12    5   0   0   0    0    0  True        2  \n","40    12    5   0   0   0    0    0  True        0  \n","41    12    5   0   0   0    0    0  True        0  \n","42    12    5   0   0   0    0    0  True        0  \n","43    12    5   0   0   0    0    0  True        1  \n","44    12    5   0   0   0    0    0  True        0  \n","45    12    5   0   0   0    0    0  True        0  \n","46    12    5   0   0   0    0    0  True        1  \n","47    12    5   0   0   0    0    0  True        1  \n","48    12    5   0   0   0    0    0  True        1  \n","49    12    5   0   0   0    0    0  True        1  \n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"QbWyM9N_yI3U","executionInfo":{"status":"ok","timestamp":1704760952165,"user_tz":-60,"elapsed":6,"user":{"displayName":"Marcin Zagrodzki","userId":"16643678327861906315"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"fDDw2CbO0tZ7","executionInfo":{"status":"ok","timestamp":1704760952165,"user_tz":-60,"elapsed":6,"user":{"displayName":"Marcin Zagrodzki","userId":"16643678327861906315"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"1cGuFYQPjMbQ","executionInfo":{"status":"ok","timestamp":1704761169775,"user_tz":-60,"elapsed":287,"user":{"displayName":"Marcin Zagrodzki","userId":"16643678327861906315"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"9QzMDFBljatf","executionInfo":{"status":"aborted","timestamp":1704760952675,"user_tz":-60,"elapsed":6,"user":{"displayName":"Marcin Zagrodzki","userId":"16643678327861906315"}}},"execution_count":null,"outputs":[]}]}